{"version":3,"sources":["app.min.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","2","global","factory","this","mustache","objectToString","Object","prototype","toString","isArray","Array","object","isFunction","escapeRegExp","string","replace","hasProperty","obj","propName","regExpTest","RegExp","test","nonSpaceRe","isWhitespace","re","testRegExp","entityMap","&","<",">","\"","'","/","`","=","whiteRe","spaceRe","equalsRe","curlyRe","tagRe","Scanner","tail","pos","Context","view","parentContext","cache",".","parent","Writer","eos","scan","match","index","substring","scanUntil","search","push","lookup","name","value","primitive","hasOwnProperty","intermediateValue","names","context","lookupHit","indexOf","split","clearCache","parse","template","tags","cacheKey","join","tokens","openingTagRe","closingTagRe","closingCurlyRe","lineHasNonSpace","sections","spaces","hasTag","nonSpace","indentation","tagIndex","stripSpace","pop","compileTags","tagsToCompile","start","type","chr","token","openSection","scanner","valueLength","charAt","nestedTokens","collector","numTokens","nestTokens","lastToken","squashedTokens","squashTokens","parseTemplate","render","partials","renderTokens","originalTemplate","symbol","buffer","undefined","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","self","j","slice","indentPartial","partial","filteredIndentation","partialByNl","indentedValue","escape","version","defaultWriter","TypeError","typeStr","to_html","send","result","String","s","nodeName","define","amd","Mustache","3","window","getGlobal","fetch","default","bind","Headers","Request","Response","4","defineProperty","renderBooks","then","resp","json","data","bookShelf","forEach","book","rating","starCount","starIcon","numberStar","Math","floor","_i","_i2","fillStars","averageRating","source","document","getElementById","innerHTML","fields","title","publishedDate","authors","pageCount","description","thumbnail","isbn","$","append","previousTextOverImage","textOverImages","getElementsByClassName","onclick","classes","classList","contains","remove","add","textOverImage","err","stopPropagation","event","fs","node-fetch","5","../../renderBook.js"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAE,mBAAmBC,SAASA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,GAAG,CAACS,QAAQ,IAAIb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAeA,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAQ,IAAI,IAAIL,EAAE,mBAAmBD,SAASA,QAAQH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAA7b,CAA4c,CAACa,EAAE,CAAC,SAAST,EAAQU,EAAOJ,KAEte,IAAIK,EAAE,CAAC,SAASX,EAAQU,EAAOJ,GAQhC,IAAyBM,EAAQC,EAARD,EASxBE,KATgCD,EAS1B,SAA0BE,GAEhC,IAAIC,EAAiBC,OAAOC,UAAUC,SAClCC,EAAUC,MAAMD,SAAW,SAA0BE,GACvD,MAAuC,mBAAhCN,EAAeT,KAAKe,IAG7B,SAASC,EAAYD,GACnB,MAAyB,mBAAXA,EAWhB,SAASE,EAAcC,GACrB,OAAOA,EAAOC,QAAQ,8BAA+B,QAOvD,SAASC,EAAaC,EAAKC,GACzB,OAAc,MAAPD,GAA8B,iBAARA,GAAqBC,KAAYD,EAkBhE,IAAIE,EAAaC,OAAOb,UAAUc,KAKlC,IAAIC,EAAa,KACjB,SAASC,EAAcT,GACrB,OANF,SAAqBU,EAAIV,GACvB,OAAOK,EAAWvB,KAAK4B,EAAIV,GAKnBW,CAAWH,EAAYR,GAGjC,IAAIY,EAAY,CACdC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,QACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UASP,IAAIC,EAAU,MACVC,EAAU,MACVC,EAAW,OACXC,EAAU,QACVC,EAAQ,qBA0OZ,SAASC,EAAS1B,GAChBX,KAAKW,OAASA,EACdX,KAAKsC,KAAO3B,EACZX,KAAKuC,IAAM,EAyDb,SAASC,EAASC,EAAMC,GACtB1C,KAAKyC,KAAOA,EACZzC,KAAK2C,MAAQ,CAAEC,IAAK5C,KAAKyC,MACzBzC,KAAK6C,OAASH,EAuGhB,SAASI,IACP9C,KAAK2C,MAAQ,GA9JfN,EAAQjC,UAAU2C,IAAM,WACtB,MAAqB,KAAd/C,KAAKsC,MAOdD,EAAQjC,UAAU4C,KAAO,SAAe3B,GACtC,IAAI4B,EAAQjD,KAAKsC,KAAKW,MAAM5B,GAE5B,IAAK4B,GAAyB,IAAhBA,EAAMC,MAClB,MAAO,GAET,IAAIvC,EAASsC,EAAM,GAKnB,OAHAjD,KAAKsC,KAAOtC,KAAKsC,KAAKa,UAAUxC,EAAOjB,QACvCM,KAAKuC,KAAO5B,EAAOjB,OAEZiB,GAOT0B,EAAQjC,UAAUgD,UAAY,SAAoB/B,GAChD,IAAkC4B,EAA9BC,EAAQlD,KAAKsC,KAAKe,OAAOhC,GAE7B,OAAQ6B,GACN,KAAM,EACJD,EAAQjD,KAAKsC,KACbtC,KAAKsC,KAAO,GACZ,MACF,KAAK,EACHW,EAAQ,GACR,MACF,QACEA,EAAQjD,KAAKsC,KAAKa,UAAU,EAAGD,GAC/BlD,KAAKsC,KAAOtC,KAAKsC,KAAKa,UAAUD,GAKpC,OAFAlD,KAAKuC,KAAOU,EAAMvD,OAEXuD,GAiBTT,EAAQpC,UAAUkD,KAAO,SAAeb,GACtC,OAAO,IAAID,EAAQC,EAAMzC,OAO3BwC,EAAQpC,UAAUmD,OAAS,SAAiBC,GAC1C,IAEIC,EArW4BC,EAAW3C,EAmWvC4B,EAAQ3C,KAAK2C,MAGjB,GAAIA,EAAMgB,eAAeH,GACvBC,EAAQd,EAAMa,OACT,CAGL,IAFA,IAAoBI,EAAmBC,EAAOX,EAA1CY,EAAU9D,KAAuC+D,GAAY,EAE1DD,GAAS,CACd,GAAwB,EAApBN,EAAKQ,QAAQ,KAsBf,IArBAJ,EAAoBE,EAAQrB,KAC5BoB,EAAQL,EAAKS,MAAM,KACnBf,EAAQ,EAmBoB,MAArBU,GAA6BV,EAAQW,EAAMnE,QAC5CwD,IAAUW,EAAMnE,OAAS,IAC3BqE,EACElD,EAAY+C,EAAmBC,EAAMX,MArYjBQ,EAsYOE,EAtYI7C,EAsYe8C,EAAMX,GApYjD,MAAbQ,GACwB,iBAAdA,GACPA,EAAUC,gBACVD,EAAUC,eAAe5C,KAoYtB6C,EAAoBA,EAAkBC,EAAMX,WAG9CU,EAAoBE,EAAQrB,KAAKe,GAqBjCO,EAAYlD,EAAYiD,EAAQrB,KAAMe,GAGxC,GAAIO,EAAW,CACbN,EAAQG,EACR,MAGFE,EAAUA,EAAQjB,OAGpBF,EAAMa,GAAQC,EAMhB,OAHIhD,EAAWgD,KACbA,EAAQA,EAAMhE,KAAKO,KAAKyC,OAEnBgB,GAeTX,EAAO1C,UAAU8D,WAAa,WAC5BlE,KAAK2C,MAAQ,IAQfG,EAAO1C,UAAU+D,MAAQ,SAAgBC,EAAUC,GACjD,IAAI1B,EAAQ3C,KAAK2C,MACb2B,EAAWF,EAAW,KAAOC,GAAQpE,EAASoE,MAAME,KAAK,KACzDC,EAAS7B,EAAM2B,GAKnB,OAHc,MAAVE,IACFA,EAAS7B,EAAM2B,GA1YnB,SAAwBF,EAAUC,GAChC,IAAKD,EACH,MAAO,GACT,IAuBIK,EAAcC,EAAcC,EAvB5BC,GAAkB,EAClBC,EAAW,GACXL,EAAS,GACTM,EAAS,GACTC,GAAS,EACTC,GAAW,EACXC,EAAc,GACdC,EAAW,EAIf,SAASC,IACP,GAAIJ,IAAWC,EACb,KAAOF,EAAOpF,eACL8E,EAAOM,EAAOM,YAEvBN,EAAS,GAIXE,EADAD,GAAS,EAKX,SAASM,EAAaC,GAIpB,GAH6B,iBAAlBA,IACTA,EAAgBA,EAAcrB,MAAMhC,EAAS,KAE1C3B,EAAQgF,IAA2C,IAAzBA,EAAc5F,OAC3C,MAAM,IAAIL,MAAM,iBAAmBiG,GAErCb,EAAe,IAAIxD,OAAOP,EAAa4E,EAAc,IAAM,QAC3DZ,EAAe,IAAIzD,OAAO,OAASP,EAAa4E,EAAc,KAC9DX,EAAiB,IAAI1D,OAAO,OAASP,EAAa,IAAM4E,EAAc,KAGxED,EAAYhB,GAAQpE,EAASoE,MAK7B,IAHA,IAEIkB,EAAOC,EAAM/B,EAAOgC,EAAKC,EAAOC,EAFhCC,EAAU,IAAIvD,EAAQ+B,IAGlBwB,EAAQ7C,OAAO,CAMrB,GALAwC,EAAQK,EAAQrD,IAGhBkB,EAAQmC,EAAQxC,UAAUqB,GAGxB,IAAK,IAAI1F,EAAI,EAAG8G,EAAcpC,EAAM/D,OAAQX,EAAI8G,IAAe9G,EAGzDqC,EAFJqE,EAAMhC,EAAMqC,OAAO/G,KAGjB+F,EAAOxB,KAAKkB,EAAO9E,QACnBuF,GAAeQ,IAGfb,EADAI,GAAW,EAEXC,GAAe,KAGjBT,EAAOlB,KAAK,CAAE,OAAQmC,EAAKF,EAAOA,EAAQ,IAC1CA,GAAS,EAGG,OAARE,IACFN,IACAF,EAAc,GACdC,EAAW,EACXN,GAAkB,GAMxB,IAAKgB,EAAQ5C,KAAKyB,GAChB,MAuBF,GArBAM,GAAS,EAGTS,EAAOI,EAAQ5C,KAAKZ,IAAU,OAC9BwD,EAAQ5C,KAAKhB,GAGA,MAATwD,GACF/B,EAAQmC,EAAQxC,UAAUlB,GAC1B0D,EAAQ5C,KAAKd,GACb0D,EAAQxC,UAAUsB,IACA,MAATc,GACT/B,EAAQmC,EAAQxC,UAAUuB,GAC1BiB,EAAQ5C,KAAKb,GACbyD,EAAQxC,UAAUsB,GAClBc,EAAO,KAEP/B,EAAQmC,EAAQxC,UAAUsB,IAIvBkB,EAAQ5C,KAAK0B,GAChB,MAAM,IAAIrF,MAAM,mBAAqBuG,EAAQrD,KAU/C,GAPEmD,EADU,KAARF,EACM,CAAEA,EAAM/B,EAAO8B,EAAOK,EAAQrD,IAAK0C,EAAaC,EAAUN,GAE1D,CAAEY,EAAM/B,EAAO8B,EAAOK,EAAQrD,KAExC2C,IACAV,EAAOlB,KAAKoC,GAEC,MAATF,GAAyB,MAATA,EAClBX,EAASvB,KAAKoC,QACT,GAAa,MAATF,EAAc,CAIvB,KAFAG,EAAcd,EAASO,OAGrB,MAAM,IAAI/F,MAAM,qBAAuBoE,EAAQ,QAAU8B,GAE3D,GAAII,EAAY,KAAOlC,EACrB,MAAM,IAAIpE,MAAM,qBAAuBsG,EAAY,GAAK,QAAUJ,OAClD,SAATC,GAA4B,MAATA,GAAyB,MAATA,EAC5CR,GAAW,EACO,MAATQ,GAETH,EAAY5B,GAShB,GALA0B,IAGAQ,EAAcd,EAASO,MAGrB,MAAM,IAAI/F,MAAM,qBAAuBsG,EAAY,GAAK,QAAUC,EAAQrD,KAE5E,OAkCF,SAAqBiC,GAMnB,IALA,IAIIkB,EAJAK,EAAe,GACfC,EAAYD,EACZlB,EAAW,GAGN9F,EAAI,EAAGkH,EAAYzB,EAAO9E,OAAQX,EAAIkH,IAAalH,EAG1D,QAFA2G,EAAQlB,EAAOzF,IAED,IACZ,IAAK,IACL,IAAK,IACHiH,EAAU1C,KAAKoC,GACfb,EAASvB,KAAKoC,GACdM,EAAYN,EAAM,GAAK,GACvB,MACF,IAAK,IACOb,EAASO,MACX,GAAKM,EAAM,GACnBM,EAA8B,EAAlBnB,EAASnF,OAAamF,EAASA,EAASnF,OAAS,GAAG,GAAKqG,EACrE,MACF,QACEC,EAAU1C,KAAKoC,GAIrB,OAAOK,EA5DAG,CAOT,SAAuB1B,GAIrB,IAHA,IAEIkB,EAAOS,EAFPC,EAAiB,GAGZrH,EAAI,EAAGkH,EAAYzB,EAAO9E,OAAQX,EAAIkH,IAAalH,GAC1D2G,EAAQlB,EAAOzF,MAGI,SAAb2G,EAAM,IAAiBS,GAA8B,SAAjBA,EAAU,IAChDA,EAAU,IAAMT,EAAM,GACtBS,EAAU,GAAKT,EAAM,KAErBU,EAAe9C,KAAKoC,GACpBS,EAAYT,IAKlB,OAAOU,EAzBWC,CAAa7B,IA+PF8B,CAAclC,EAAUC,IAE9CG,GAgBT1B,EAAO1C,UAAUmG,OAAS,SAAiBnC,EAAU3B,EAAM+D,EAAUnC,GACnE,IAAIG,EAASxE,KAAKmE,MAAMC,EAAUC,GAC9BP,EAAWrB,aAAgBD,EAAWC,EAAO,IAAID,EAAQC,GAC7D,OAAOzC,KAAKyG,aAAajC,EAAQV,EAAS0C,EAAUpC,EAAUC,IAYhEvB,EAAO1C,UAAUqG,aAAe,SAAuBjC,EAAQV,EAAS0C,EAAUE,EAAkBrC,GAIlG,IAHA,IAEIqB,EAAOiB,EAAQlD,EAFfmD,EAAS,GAGJ7H,EAAI,EAAGkH,EAAYzB,EAAO9E,OAAQX,EAAIkH,IAAalH,EAC1D0E,OAAQoD,EAIO,OAFfF,GADAjB,EAAQlB,EAAOzF,IACA,IAEK0E,EAAQzD,KAAK8G,cAAcpB,EAAO5B,EAAS0C,EAAUE,GACrD,MAAXC,EAAgBlD,EAAQzD,KAAK+G,eAAerB,EAAO5B,EAAS0C,EAAUE,GAC3D,MAAXC,EAAgBlD,EAAQzD,KAAKgH,cAActB,EAAO5B,EAAS0C,EAAUnC,GAC1D,MAAXsC,EAAgBlD,EAAQzD,KAAKiH,eAAevB,EAAO5B,GACxC,SAAX6C,EAAmBlD,EAAQzD,KAAKkH,aAAaxB,EAAO5B,GACzC,SAAX6C,IAAmBlD,EAAQzD,KAAKmH,SAASzB,SAEpCmB,IAAVpD,IACFmD,GAAUnD,GAGd,OAAOmD,GAGT9D,EAAO1C,UAAU0G,cAAgB,SAAwBpB,EAAO5B,EAAS0C,EAAUE,GACjF,IAAIU,EAAOpH,KACP4G,EAAS,GACTnD,EAAQK,EAAQP,OAAOmC,EAAM,IAQjC,GAAKjC,EAAL,CAEA,GAAInD,EAAQmD,GACV,IAAK,IAAI4D,EAAI,EAAGxB,EAAcpC,EAAM/D,OAAQ2H,EAAIxB,IAAewB,EAC7DT,GAAU5G,KAAKyG,aAAaf,EAAM,GAAI5B,EAAQR,KAAKG,EAAM4D,IAAKb,EAAUE,QAErE,GAAqB,iBAAVjD,GAAuC,iBAAVA,GAAuC,iBAAVA,EAC1EmD,GAAU5G,KAAKyG,aAAaf,EAAM,GAAI5B,EAAQR,KAAKG,GAAQ+C,EAAUE,QAChE,GAAIjG,EAAWgD,GAAQ,CAC5B,GAAgC,iBAArBiD,EACT,MAAM,IAAIrH,MAAM,kEAKL,OAFboE,EAAQA,EAAMhE,KAAKqE,EAAQrB,KAAMiE,EAAiBY,MAAM5B,EAAM,GAAIA,EAAM,IAjB1E,SAAoBtB,GAClB,OAAOgD,EAAKb,OAAOnC,EAAUN,EAAS0C,QAmBpCI,GAAUnD,QAEZmD,GAAU5G,KAAKyG,aAAaf,EAAM,GAAI5B,EAAS0C,EAAUE,GAE3D,OAAOE,IAGT9D,EAAO1C,UAAU2G,eAAiB,SAAyBrB,EAAO5B,EAAS0C,EAAUE,GACnF,IAAIjD,EAAQK,EAAQP,OAAOmC,EAAM,IAIjC,IAAKjC,GAAUnD,EAAQmD,IAA2B,IAAjBA,EAAM/D,OACrC,OAAOM,KAAKyG,aAAaf,EAAM,GAAI5B,EAAS0C,EAAUE,IAG1D5D,EAAO1C,UAAUmH,cAAgB,SAAwBC,EAASvC,EAAaL,GAG7E,IAFA,IAAI6C,EAAsBxC,EAAYrE,QAAQ,UAAW,IACrD8G,EAAcF,EAAQvD,MAAM,MACvBlF,EAAI,EAAGA,EAAI2I,EAAYhI,OAAQX,IAClC2I,EAAY3I,GAAGW,SAAe,EAAJX,IAAU6F,KACtC8C,EAAY3I,GAAK0I,EAAsBC,EAAY3I,IAGvD,OAAO2I,EAAYnD,KAAK,OAG1BzB,EAAO1C,UAAU4G,cAAgB,SAAwBtB,EAAO5B,EAAS0C,EAAUnC,GACjF,GAAKmC,EAAL,CAEA,IAAI/C,EAAQhD,EAAW+F,GAAYA,EAASd,EAAM,IAAMc,EAASd,EAAM,IACvE,GAAa,MAATjC,EAAe,CACjB,IAAImB,EAAkBc,EAAM,GACxBR,EAAWQ,EAAM,GACjBT,EAAcS,EAAM,GACpBiC,EAAgBlE,EAIpB,OAHgB,GAAZyB,GAAiBD,IACnB0C,EAAgB3H,KAAKuH,cAAc9D,EAAOwB,EAAaL,IAElD5E,KAAKyG,aAAazG,KAAKmE,MAAMwD,EAAetD,GAAOP,EAAS0C,EAAUmB,MAIjF7E,EAAO1C,UAAU6G,eAAiB,SAAyBvB,EAAO5B,GAChE,IAAIL,EAAQK,EAAQP,OAAOmC,EAAM,IACjC,GAAa,MAATjC,EACF,OAAOA,GAGXX,EAAO1C,UAAU8G,aAAe,SAAuBxB,EAAO5B,GAC5D,IAAIL,EAAQK,EAAQP,OAAOmC,EAAM,IACjC,GAAa,MAATjC,EACF,OAAOxD,EAAS2H,OAAOnE,IAG3BX,EAAO1C,UAAU+G,SAAW,SAAmBzB,GAC7C,OAAOA,EAAM,IAGfzF,EAASuD,KAAO,cAChBvD,EAAS4H,QAAU,QACnB5H,EAASoE,KAAO,CAAE,KAAM,MAGxB,IAAIyD,EAAgB,IAAIhF,EAyDxB,OApDA7C,EAASiE,WAAa,WACpB,OAAO4D,EAAc5D,cAQvBjE,EAASkE,MAAQ,SAAgBC,EAAUC,GACzC,OAAOyD,EAAc3D,MAAMC,EAAUC,IASvCpE,EAASsG,OAAS,SAAiBnC,EAAU3B,EAAM+D,EAAUnC,GAC3D,GAAwB,iBAAbD,EACT,MAAM,IAAI2D,UAAU,wDAjpBxB,SAAkBjH,GAChB,OAAOR,EAAQQ,GAAO,eAAiBA,EAipBPkH,CAAQ5D,GAAY,mFAIpD,OAAO0D,EAAcvB,OAAOnC,EAAU3B,EAAM+D,EAAUnC,IAKxDpE,EAASgI,QAAU,SAAkB7D,EAAU3B,EAAM+D,EAAU0B,GAG7D,IAAIC,EAASlI,EAASsG,OAAOnC,EAAU3B,EAAM+D,GAE7C,IAAI/F,EAAWyH,GAGb,OAAOC,EAFPD,EAAKC,IAQTlI,EAAS2H,OArnBT,SAAqBjH,GACnB,OAAOyH,OAAOzH,GAAQC,QAAQ,eAAgB,SAAwByH,GACpE,OAAO9G,EAAU8G,MAsnBrBpI,EAASoC,QAAUA,EACnBpC,EAASuC,QAAUA,EACnBvC,EAAS6C,OAASA,EAEX7C,GAvsBgB,iBAAZT,GAAwBA,GAAuC,iBAArBA,EAAQ8I,SAC3DvI,EAAQP,GACmB,mBAAX+I,QAAyBA,OAAOC,IAChDD,OAAO,CAAC,WAAYxI,IAEpBD,EAAO2I,SAAW,GAClB1I,EAAQD,EAAO2I,YAosBjB,IAAIC,EAAE,CAAC,SAASxJ,EAAQU,EAAOJ,IACjC,SAAWM,GACX,aAaIA,EAVY,WAIf,GAAoB,oBAATsH,KAAwB,OAAOA,KAC1C,GAAsB,oBAAXuB,OAA0B,OAAOA,OAC5C,QAAsB,IAAX7I,EAA0B,OAAOA,EAC5C,MAAM,IAAIT,MAAM,kCAGJuJ,GAEbhJ,EAAOJ,QAAUA,EAAUM,EAAO+I,MAGlCrJ,EAAQsJ,QAAUhJ,EAAO+I,MAAME,KAAKjJ,GAEpCN,EAAQwJ,QAAUlJ,EAAOkJ,QACzBxJ,EAAQyJ,QAAUnJ,EAAOmJ,QACzBzJ,EAAQ0J,SAAWpJ,EAAOoJ,WACvBzJ,KAAKO,KAAuB,oBAAXF,OAAyBA,OAAyB,oBAATsH,KAAuBA,KAAyB,oBAAXuB,OAAyBA,OAAS,KAClI,IAAIQ,EAAE,CAAC,SAASjK,EAAQU,EAAOJ,GACjC,aAEAW,OAAOiJ,eAAe5J,EAAS,aAAc,CAC3CiE,OAAO,IAETjE,EAAQ6J,YASR,WACER,EAAM,eAAeS,KAAK,SAAUC,GAClC,OAAOA,EAAKC,SACXF,KAAK,SAAUG,GAChBA,EAAKC,UAAUC,QAAQ,SAAUC,GAC/B,IAAIC,EAkBV,SAAmBC,GACjB,IAAIC,EAAW,GACXC,EAAaC,KAAKC,MAAMJ,GAE5B,GAAKA,EAIE,CACL,IAAK,IAAIK,EAAK,EAAGA,EAAKH,EAAYG,GAAU,EAC/B,IAAPA,EACFJ,GAAY,6BAEZA,EAAW,6BAIf,GAAmB,IAAfC,EACF,IAAK,IAAII,EAAM,EAAGA,EAAM,EAAIJ,EAAYI,GAAY,EAClDL,GAAY,mCAdhB,IAAK,IAAIhL,EAAI,EAAGA,EAAI,EAAGA,GAAQ,EAC7BgL,GAAY,8BAkBhB,OAAOA,EA1CUM,CAAUT,EAAKU,eACxBC,EAASC,SAASC,eAAe,iBAAiBC,UAClDC,EAAS,CACXC,MAAOhB,EAAKgB,MACZC,cAAejB,EAAKiB,cACpBC,QAASlB,EAAKkB,QACdC,UAAWnB,EAAKmB,UAChBC,YAAapB,EAAKoB,YAClBV,cAAeT,EACfoB,UAAWrB,EAAKqB,UAChBC,KAAMtB,EAAKsB,MAEbC,EAAE,mBAAmBC,OAAOnL,EAASsG,OAAOgE,EAAQI,MAiC1D,WAIE,IAHA,IACIU,EADAC,EAAiBd,SAASe,uBAAuB,wBAG5CxM,EAAI,EAAGA,EAAIuM,EAAe5L,OAAQX,IACzCuM,EAAevM,GAAGyM,QAAU,WAC1B,IAAIC,EAAUzL,KAAK0L,UAEfD,EAAQE,SAAS,QACnBF,EAAQG,OAAO,SAEc,MAAzBP,GAA+BA,EAAsBK,UAAUE,OAAO,QAC1EP,EAAwBrL,KACxByL,EAAQI,IAAI,UA5ChBC,KACQ,MAAE,SAAUC,OA5BxBvM,EAAQwM,gBA6ER,SAAyBC,GACvBA,EAAMD,mBA5EC9M,EAAQ,MAAjB,IAEI2J,EAAQ3J,EAAQ,cAEhBe,EAAWf,EAAQ,aA2ErB,CAACgN,GAAK,EAAEjM,SAAW,EAAEkM,aAAa,IAAIC,EAAE,CAAC,SAASlN,EAAQU,EAAOJ,GACnE,cAIA,EAFkBN,EAAQ,uBAEVmK,gBAEd,CAACgD,sBAAsB,KAAK,GAAG,CAAC","file":"app.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\n},{}],2:[function(require,module,exports){\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  /**\n   * Safe way of detecting whether or not the given thing is a primitive and\n   * whether it has the given property\n   */\n  function primitiveHasOwnProperty (primitive, propName) {\n    return (\n      primitive != null\n      && typeof primitive !== 'object'\n      && primitive.hasOwnProperty\n      && primitive.hasOwnProperty(propName)\n    );\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   *\n   * Tokens for partials also contain two more elements: 1) a string value of\n   * indendation prior to that tag and 2) the index of that tag on that line -\n   * eg a value of 2 indicates the partial is the third tag on this line.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n    var lineHasNonSpace = false;\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n    var indentation = '';  // Tracks indentation for tags that use it\n    var tagIndex = 0;      // Stores a count of number of tags encountered on a line\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n            indentation += chr;\n          } else {\n            nonSpace = true;\n            lineHasNonSpace = true;\n            indentation += ' ';\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n            indentation = '';\n            tagIndex = 0;\n            lineHasNonSpace = false;\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      if (type == '>') {\n        token = [ type, value, start, scanner.pos, indentation, tagIndex, lineHasNonSpace ];\n      } else {\n        token = [ type, value, start, scanner.pos ];\n      }\n      tagIndex++;\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    stripSpace();\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, intermediateValue, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          intermediateValue = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           *\n           * In the case where dot notation is used, we consider the lookup\n           * to be successful even if the last \"object\" in the path is\n           * not actually an object but a primitive (e.g., a string, or an\n           * integer), because it is sometimes useful to access a property\n           * of an autoboxed primitive, such as the length of a string.\n           **/\n          while (intermediateValue != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = (\n                hasProperty(intermediateValue, names[index])\n                || primitiveHasOwnProperty(intermediateValue, names[index])\n              );\n\n            intermediateValue = intermediateValue[names[index++]];\n          }\n        } else {\n          intermediateValue = context.view[name];\n\n          /**\n           * Only checking against `hasProperty`, which always returns `false` if\n           * `context.view` is not an object. Deliberately omitting the check\n           * against `primitiveHasOwnProperty` if dot notation is not used.\n           *\n           * Consider this example:\n           * ```\n           * Mustache.render(\"The length of a football field is {{#length}}{{length}}{{/length}}.\", {length: \"100 yards\"})\n           * ```\n           *\n           * If we were to check also against `primitiveHasOwnProperty`, as we do\n           * in the dot notation case, then render call would return:\n           *\n           * \"The length of a football field is 9.\"\n           *\n           * rather than the expected:\n           *\n           * \"The length of a football field is 100 yards.\"\n           **/\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit) {\n          value = intermediateValue;\n          break;\n        }\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` according to the given `tags` or\n   * `mustache.tags` if `tags` is omitted,  and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var cacheKey = template + ':' + (tags || mustache.tags).join(':');\n    var tokens = cache[cacheKey];\n\n    if (tokens == null)\n      tokens = cache[cacheKey] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   *\n   * If the optional `tags` argument is given here it must be an array with two\n   * string values: the opening and closing tags used in the template (e.g.\n   * [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  Writer.prototype.render = function render (template, view, partials, tags) {\n    var tokens = this.parse(template, tags);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template, tags);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate, tags) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, tags);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.indentPartial = function indentPartial (partial, indentation, lineHasNonSpace) {\n    var filteredIndentation = indentation.replace(/[^ \\t]/g, '');\n    var partialByNl = partial.split('\\n');\n    for (var i = 0; i < partialByNl.length; i++) {\n      if (partialByNl[i].length && (i > 0 || !lineHasNonSpace)) {\n        partialByNl[i] = filteredIndentation + partialByNl[i];\n      }\n    }\n    return partialByNl.join('\\n');\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials, tags) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null) {\n      var lineHasNonSpace = token[6];\n      var tagIndex = token[5];\n      var indentation = token[4];\n      var indentedValue = value;\n      if (tagIndex == 0 && indentation) {\n        indentedValue = this.indentPartial(value, indentation, lineHasNonSpace);\n      }\n      return this.renderTokens(this.parse(indentedValue, tags), context, partials, indentedValue);\n    }\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '3.1.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer. If the optional `tags` argument is given here it must be an\n   * array with two string values: the opening and closing tags used in the\n   * template (e.g. [ \"<%\", \"%>\" ]). The default is to mustache.tags.\n   */\n  mustache.render = function render (template, view, partials, tags) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials, tags);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n},{}],3:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar global = getGlobal();\n\nmodule.exports = exports = global.fetch;\n\n// Needed for TypeScript and Webpack.\nexports.default = global.fetch.bind(global);\n\nexports.Headers = global.Headers;\nexports.Request = global.Request;\nexports.Response = global.Response;\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.renderBooks = renderBooks;\nexports.stopPropagation = stopPropagation;\n\nvar fs = require(\"fs\");\n\nvar fetch = require(\"node-fetch\");\n\nvar mustache = require(\"mustache\");\n\nfunction renderBooks() {\n  fetch(\"/books.json\").then(function (resp) {\n    return resp.json();\n  }).then(function (data) {\n    data.bookShelf.forEach(function (book) {\n      var rating = fillStars(book.averageRating);\n      var source = document.getElementById(\"book-template\").innerHTML;\n      var fields = {\n        title: book.title,\n        publishedDate: book.publishedDate,\n        authors: book.authors,\n        pageCount: book.pageCount,\n        description: book.description,\n        averageRating: rating,\n        thumbnail: book.thumbnail,\n        isbn: book.isbn\n      };\n      $(\"#bookshelfbooks\").append(mustache.render(source, fields));\n    });\n    textOverImage();\n  })[\"catch\"](function (err) {});\n}\n\nfunction fillStars(starCount) {\n  var starIcon = '';\n  var numberStar = Math.floor(starCount);\n\n  if (!starCount) {\n    for (var i = 0; i < 5; i = i + 1) {\n      starIcon += '<i class=\"far fa-star\"></i>';\n    }\n  } else {\n    for (var _i = 0; _i < numberStar; _i = _i + 1) {\n      if (_i !== 0) {\n        starIcon += '<i class=\"fa fa-star\"></i>';\n      } else {\n        starIcon = '<i class=\"fa fa-star\"></i>';\n      }\n    }\n\n    if (numberStar !== 5) {\n      for (var _i2 = 0; _i2 < 5 - numberStar; _i2 = _i2 + 1) {\n        starIcon += '<i class=\"far fa-star\"></i>';\n      }\n    }\n  }\n\n  return starIcon;\n}\n\nfunction textOverImage() {\n  var textOverImages = document.getElementsByClassName(\"onClickTextOverImage\");\n  var previousTextOverImage;\n\n  for (var i = 0; i < textOverImages.length; i++) {\n    textOverImages[i].onclick = function () {\n      var classes = this.classList;\n\n      if (classes.contains(\"show\")) {\n        classes.remove(\"show\");\n      } else {\n        if (previousTextOverImage != null) previousTextOverImage.classList.remove(\"show\");\n        previousTextOverImage = this;\n        classes.add(\"show\");\n      }\n    };\n  }\n}\n\nfunction stopPropagation(event) {\n  event.stopPropagation();\n}\n\n},{\"fs\":1,\"mustache\":2,\"node-fetch\":3}],5:[function(require,module,exports){\n\"use strict\";\n\nvar _renderBook = require(\"../../renderBook.js\");\n\n(0, _renderBook.renderBooks)();\n\n},{\"../../renderBook.js\":4}]},{},[5]);\n"]}